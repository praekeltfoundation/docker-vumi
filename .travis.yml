sudo: required
services:
  - docker
language: bash
env:
  - BASE_OS=alpine VARIETY=
  - BASE_OS=debian VARIETY=
  - BASE_OS=debian VARIETY=pypy

# Update Docker Engine
before_install:
  - sudo apt-get update
  - sudo apt-get install -qy -o Dpkg::Options::="--force-confold" docker-engine

before_script:
  - IMAGE_TAG="praekeltfoundation/vumi:$BASE_OS${VARIETY:+-$VARIETY}"
  - DOCKERFILE="$BASE_OS/${VARIETY:-Dockerfile}${VARIETY:+.dockerfile}"
  # Launch rabbitmq container for testing
  - docker run -d --name vumi-rabbitmq rabbitmq

script:
  - docker build --tag "$IMAGE_TAG" --file "$DOCKERFILE" .
  # For a basic test, do pretty much what's described in the tutorial:
  # http://vumi.readthedocs.io/en/latest/intro/tutorial01.html
  # First, run a telnet Vumi transport & check that starts correctly configured
  - |
      docker run -d --name vumi-telnet --link vumi-rabbitmq:rabbitmq -p 9010:9010 \
        -e AMQP_HOST=rabbitmq \
        -e WORKER_CLASS=vumi.transports.telnet.TelnetServerTransport \
        -e VUMI_OPT_TRANSPORT_NAME=telnet -e VUMI_OPT_TELNET_PORT=9010 \
        "$IMAGE_TAG" && sleep 2
  - |
      docker logs vumi-telnet \
        | fgrep "Starting a TelnetServerTransport worker with config: {'telnet_port': '9010', 'transport_name': 'telnet'}"

  # Next, run an echo worker & check that it echoes over the telnet interface
  - |
      docker run -d --name vumi-echo --link vumi-rabbitmq:rabbitmq \
        -e AMQP_HOST=rabbitmq \
        -e WORKER_CLASS=vumi.demos.words.EchoWorker \
        -e VUMI_OPT_TRANSPORT_NAME=telnet \
        "$IMAGE_TAG" && sleep 2
  # Wait for the session to start, send our message, wait for reply
  - "{ sleep 1; echo 'hallo world'; sleep 1; } | telnet localhost 9010 | fgrep 'hallo world'"
  - "docker logs vumi-echo | fgrep 'User message: hallo world'"
  - docker stop vumi-telnet vumi-echo

after_script:
  - docker stop vumi-rabbitmq
  - docker images
